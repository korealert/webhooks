// Generated by CoffeeScript 1.8.0
var Client, request;

request = require('request');

Client = function(user, token, opts) {
  this.opts = opts != null ? opts : {};
  if (!user) {
    throw new Error('User can not be empty');
  }
  if (!token) {
    throw new Error('Token can not be empty');
  }
  this.api = 'https://metrics-api.librato.com/v1';
  this.auth = {
    user: user,
    pass: token
  };
  return this;
};

Client.prototype._post = function(url, json, cb) {
  return request.post("" + this.api + "/" + url, {
    auth: this.auth,
    json: true,
    body: json
  }, cb);
};

Client.prototype.metricsPost = function(type, key, val, opts, cb) {
  var json;
  json = {};
  json[type] = {};
  json[type][this.opts.prefix + key] = {
    value: val,
    measure_time: Math.floor(new Date().getTime() / 1000),
    source: opts.source || this.opts.source
  };
  return this._post("metrics", json, function(err, res, body) {
    if (cb) {
      return cb(err, res.statusCode, body);
    }
    if (err) {
      throw err;
    }
  });
};

Client.prototype.measure = function(key, val, opts, cb) {
  return this.metricsPost('gauges', key, val, opts, cb);
};

Client.prototype.count = function(key, val, opts, cb) {
  return this.metricsPost('counters', key, val, opts, cb);
};

module.exports = Client;
