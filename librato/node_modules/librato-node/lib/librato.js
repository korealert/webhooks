// Generated by CoffeeScript 1.9.1
(function() {
  var Client, Collector, EventEmitter, Worker, client, collector, config, librato, middleware, ref, sanitize_name, worker;

  EventEmitter = require('events').EventEmitter;

  Client = require('./client');

  Worker = require('./worker');

  Collector = require('./collector');

  middleware = require('./middleware');

  ref = {}, collector = ref.collector, client = ref.client, worker = ref.worker, config = ref.config;

  librato = new EventEmitter();

  librato.configure = function(newConfig) {
    config = newConfig;
    collector = new Collector();
    client = new Client(config);
    return worker = new Worker({
      job: librato.flush
    });
  };

  librato.increment = function(name, value) {
    var ref1;
    if (value == null) {
      value = 1;
    }
    name = sanitize_name(name);
    return collector.increment("" + ((ref1 = config.prefix) != null ? ref1 : '') + name, value);
  };

  librato.timing = function(name, valueMs) {
    var ref1;
    name = sanitize_name(name);
    return collector.timing("" + ((ref1 = config.prefix) != null ? ref1 : '') + name, valueMs);
  };

  librato.measure = librato.timing;

  librato.start = function() {
    return worker.start();
  };

  librato.stop = function(cb) {
    worker.stop();
    return librato.flush(cb);
  };

  librato.flush = function(cb) {
    var gauges, i, len, measurement;
    if (cb == null) {
      cb = function() {};
    }
    gauges = [];
    collector.flushTo(gauges);
    for (i = 0, len = gauges.length; i < len; i++) {
      measurement = gauges[i];
      measurement.source = config.source;
    }
    if (!gauges.length) {
      return process.nextTick(cb);
    }
    return client.send({
      gauges: gauges
    }, function(err) {
      if (err != null) {
        librato.emit('error', err);
      }
      return cb(err);
    });
  };

  librato.middleware = middleware(librato);

  module.exports = librato;

  sanitize_name = function(name) {
    return name.replace(/[^-.:_\w]+/g, '_').substr(0, 255);
  };

}).call(this);

//# sourceMappingURL=librato.js.map
